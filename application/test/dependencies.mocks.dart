// Mocks generated by Mockito 5.0.17 from annotations
// in application/test/dependencies.dart.
// Do not manually edit this file.

import 'dart:async' as _i7;

import 'package:domain/repository/cart_repository.dart' as _i6;
import 'package:application/services/domain_event_service.dart' as _i3;
import 'package:application/services/user_manager_service.dart';
import 'package:domain/entities/cart.dart' as _i4;
import 'package:domain/entities/user.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeUser_0 extends _i1.Fake implements _i2.User {}

class _FakeDomainEventService_1 extends _i1.Fake
    implements _i3.ApplicationEventService {}

class _FakeCart_2 extends _i1.Fake implements _i4.Cart {}

/// A class which mocks [UserManagerService].
///
/// See the documentation for Mockito's code generation for more information.
class MockIUserManagerService extends _i1.Mock implements UserManagerService {
  MockIUserManagerService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.User currentUser() =>
      (super.noSuchMethod(Invocation.method(#currentUser, []),
          returnValue: _FakeUser_0()) as _i2.User);
}

/// A class which mocks [CartRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockCartRepository extends _i1.Mock implements _i6.CartRepository {
  MockCartRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.ApplicationEventService get eventService => (super.noSuchMethod(
      Invocation.getter(#eventService),
      returnValue: _FakeDomainEventService_1()) as _i3.ApplicationEventService);
  
  @override
  _i7.Future<_i4.Cart> getOpenedOrNew(_i2.User? user) =>
      (super.noSuchMethod(Invocation.method(#getOpenedOrNew, [user]),
              returnValue: Future<_i4.Cart>.value(_FakeCart_2()))
          as _i7.Future<_i4.Cart>);
  @override
  _i7.Future<_i4.Cart> getById(String? id) =>
      (super.noSuchMethod(Invocation.method(#getById, [id]),
              returnValue: Future<_i4.Cart>.value(_FakeCart_2()))
          as _i7.Future<_i4.Cart>);
  @override
  _i7.Future<dynamic> save(_i4.Cart? entity) =>
      (super.noSuchMethod(Invocation.method(#save, [entity]),
          returnValue: Future<dynamic>.value()) as _i7.Future<dynamic>);
}
